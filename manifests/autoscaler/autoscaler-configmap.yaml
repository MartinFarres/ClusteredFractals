apiVersion: v1
kind: ConfigMap
metadata:
  name: puller-yamls
  namespace: distributed-fractals
data:

  puller-sa.yaml: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: puller-sa
      namespace: PLACE_HOLDER
  
  puller-role.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: puller-role
      namespace: PLACE_HOLDER 
    rules:
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["get","list","watch"]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: ["get","create"]
      - apiGroups: [""]
        resources: ["services"]
        verbs: ["get","list","create","patch"]
      - apiGroups: ["apps"]
        resources: ["deployments", "statefulsets", "statefulsets/scale"]
        verbs: ["get", "list", "create", "patch"]

  puller-rolebinding.yaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: puller-rb
      namespace: PLACE_HOLDER 
    subjects:
      - kind: ServiceAccount
        name: puller-sa
        namespace: PLACE_HOLDER 
    roleRef:
      kind: Role
      name: puller-role
      apiGroup: rbac.authorization.k8s.io
 

  puller-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: puller
      namespace: PLACE_HOLDER
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: puller
      template:
        metadata:
          labels:
            app: puller
        spec:
          serviceAccountName: puller-sa
          containers:
            - name: puller
              image: martinfarres/python-puller_kubernetes-redis
              imagePullPolicy: Always
              env:
                - name: SERVER_HOST
                  value: server
                - name: REDIS_HOST
                  value: redis.distributed-fractals
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: MPIPASS
                  value: "mpi-password"
                - name: NODE_COUNT
                  value: "4"
                - name: SLOTS_PER_NODE
                  value: "2"
                - name: MPI_IMAGE
                  value: "martinfarres/mpi-node:slim"
                - name: OBSERVER_IMAGE
                  value: "martinfarres/python-observer_kubernetes-redis:latest"
          # imagePullSecrets:
          #   - passuser: mpi-password

